import yfinance as yf
import pandas as pd
import plotly.graph_objects as go
import plotly.express as px  # –î–ª—è –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏–∏ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏


def load_data(tickers, start_date, end_date):
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç —Å–∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ü–µ–Ω—ã"""
    data = yf.download(tickers, start=start_date, end=end_date, auto_adjust=True)

    if isinstance(data.columns, pd.MultiIndex):
        df = data['Close']
    else:
        df = data.to_frame(name=tickers[0])

    return df.dropna(how='all')


def normalize_data(df):
    """–ù–æ—Ä–º–∞–ª–∏–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ, —á—Ç–æ–±—ã –≤—Å–µ –∞–∫—Ç–∏–≤—ã –Ω–∞—á–∏–Ω–∞–ª–∏—Å—å —Å –æ–¥–∏–Ω–∞–∫–æ–≤–æ–π —Ü–µ–Ω—ã"""
    return df / df.iloc[0]  # –î–µ–ª–∏–º –Ω–∞ —Ü–µ–Ω—É –ø–µ—Ä–≤–æ–≥–æ –¥–Ω—è, —á—Ç–æ–±—ã –≤—Å–µ –∞–∫—Ç–∏–≤—ã –Ω–∞—á–∏–Ω–∞–ª–∏—Å—å —Å 1


def plot_price_changes(df):
    """–ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã —Å –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–µ–π"""
    normalized_df = normalize_data(df)  # –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ
    price_changes = normalized_df.diff().dropna()  # –†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É —Å–æ—Å–µ–¥–Ω–∏–º–∏ –¥–Ω—è–º–∏

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å plotly
    fig = go.Figure()

    for column in price_changes.columns:
        fig.add_trace(go.Scatter(
            x=price_changes.index,
            y=price_changes[column],
            mode='lines',
            name=column
        ))

    fig.update_layout(
        title='–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω –∞–∫—Ç–∏–≤–æ–≤ (–Ω–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–æ)',
        xaxis_title='–î–∞—Ç–∞',
        yaxis_title='–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Ü–µ–Ω—ã (–≤ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã—Ö –µ–¥–∏–Ω–∏—Ü–∞—Ö)',
        template='plotly_dark',
        autosize=True,
    )

    fig.show()


def plot_returns(df):
    """–ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–µ–π"""
    returns = df.pct_change().dropna()  # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ

    # –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–≥–æ –≥—Ä–∞—Ñ–∏–∫–∞ —Å plotly
    fig = go.Figure()

    for column in returns.columns:
        fig.add_trace(go.Scatter(
            x=returns.index,
            y=returns[column],
            mode='lines',
            name=column
        ))

    fig.update_layout(
        title='–î–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏ –∞–∫—Ç–∏–≤–æ–≤',
        xaxis_title='–î–∞—Ç–∞',
        yaxis_title='–î–æ—Ö–æ–¥–Ω–æ—Å—Ç—å (–≤ –¥–æ–ª—è—Ö)',
        template='plotly_dark',
        autosize=True,
    )

    fig.show()


def plot_correlation(df):
    """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–∞–º–∏"""
    # –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–µ–π
    returns = df.pct_change().dropna()  # –ü—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∏–∑–º–µ–Ω–µ–Ω–∏–µ
    correlation_matrix = returns.corr()

    # –í–∏–∑—É–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ—Ä—Ä–µ–ª—è—Ü–∏—é —Å –ø–æ–º–æ—â—å—é plotly express (—Ç–µ–ø–ª–æ–≤–∞—è –∫–∞—Ä—Ç–∞)
    fig = px.imshow(correlation_matrix,
                    labels=dict(x="–ê–∫—Ç–∏–≤—ã", y="–ê–∫—Ç–∏–≤—ã", color="–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è"),
                    color_continuous_scale='RdBu_r',
                    title="–ö–æ—Ä—Ä–µ–ª—è—Ü–∏—è –º–µ–∂–¥—É –∞–∫—Ç–∏–≤–∞–º–∏")

    fig.update_layout(
        template='plotly_dark',
        autosize=True,
    )

    fig.show()


def choose_tickers():
    """–í—ã–±–æ—Ä —Ç–∏–∫–µ—Ä–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"""
    available_tickers = [
        'AAPL', 'MSFT', 'TSLA', 'GOOGL', 'AMZN', 'NFLX', 'QQQ', 'SPY', 'BTC-USD', 'ETH-USD', 'FB', 'NVDA', '^GSPC',
        '^DJI', '^NDX', '^RUT', '^VIX'
    ]
    print("–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã:")
    for idx, ticker in enumerate(available_tickers, 1):
        print(f"{idx}. {ticker}")

    selected_tickers = input("–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä–∞ —Ç–∏–∫–µ—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä: 1,2,5): ")
    selected_indices = [int(i) - 1 for i in selected_tickers.split(',')]

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —Ç–∏–∫–µ—Ä—ã
    return [available_tickers[i] for i in selected_indices]


def main():
    # üóìÔ∏è –í–≤–æ–¥ –¥–∞—Ç
    start_date = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ (YYYY-MM-DD): ")
    end_date = input("–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∫–æ–Ω—Ü–∞ (YYYY-MM-DD): ")

    # üè∑Ô∏è –í—ã–±–æ—Ä —Ç–∏–∫–µ—Ä–æ–≤
    user_tickers = choose_tickers()

    # –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ
    df = load_data(user_tickers, start_date, end_date)

    if df.empty:
        print("‚ùå –î–∞–Ω–Ω—ã–µ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
        return

    plot_price_changes(df)  # –ì—Ä–∞—Ñ–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ü–µ–Ω—ã
    plot_returns(df)  # –ì—Ä–∞—Ñ–∏–∫ –¥–æ—Ö–æ–¥–Ω–æ—Å—Ç–∏2024-12-31
    plot_correlation(df)  # –ì—Ä–∞—Ñ–∏–∫ –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–∏


if __name__ == "__main__":
    main()